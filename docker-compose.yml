services:
  # Bitpanda Portfolio App
  bitpanda-portfolio:
    build: .
    container_name: bitpanda-portfolio-app
    restart: unless-stopped
    ports:
      - "5000:5000"  # Direktes Port-Mapping für bessere Erreichbarkeit
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY:-change-me-in-production}
      - DATABASE_PATH=/app/data/users.db
      - LOG_LEVEL=INFO
    volumes:
      - portfolio_data:/app/data
      - portfolio_logs:/app/logs
      - ./backup:/app/backup:ro  # Backup-Verzeichnis (read-only)
    networks:
      - portfolio_network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:5000/', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    read_only: false  # Da wir in die Datenbank schreiben müssen
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

  # Optional: Database Backup Service
  backup-service:
    image: alpine:latest
    container_name: bitpanda-portfolio-backup
    restart: unless-stopped
    volumes:
      - portfolio_data:/data:ro
      - ./backup:/backup
    networks:
      - portfolio_network
    command: |
      sh -c "
        while true; do
          echo 'Creating database backup...'
          cp /data/users.db /backup/users_backup_$(date +%Y%m%d_%H%M%S).db 2>/dev/null || echo 'No database found yet'
          # Alte Backups löschen (älter als 7 Tage)
          find /backup -name 'users_backup_*.db' -mtime +7 -delete 2>/dev/null || true
          echo 'Backup completed. Sleeping for 24 hours...'
          sleep 86400
        done
      "
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=10m

volumes:
  portfolio_data:
    driver: local
  portfolio_logs:
    driver: local

networks:
  portfolio_network:
    driver: bridge
    internal: false  # Erlaube Internet-Zugriff für API-Calls
